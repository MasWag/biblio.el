HTTP/1.1 200 OK
Content-Security-Policy: upgrade-insecure-requests
Content-Type: application/json;charset=UTF-8
Date: Tue, 12 Feb 2019 22:18:25 GMT
Server: Mashery Proxy
Set-Cookie: <redacted>
Set-Cookie: <redacted>
X-Mashery-Responder: prod-j-worker-us-east-1d-56.mashery.com
X-XSS-Protection: 1
Content-Length: 4748
Connection: keep-alive

{"total_records":2,"total_searched":4724167,"articles":[{"doi":"10.1109/32.588534","title":"An industrial strength theorem prover for a logic based on Common Lisp","publisher":"IEEE","issue":"4","issn":"0098-5589","rank":1,"volume":"23","authors":{"authors":[{"affiliation":"Motorola Inc., Austin, TX, USA","authorUrl":"https://ieeexplore.ieee.org/author/37357407100","id":37357407100,"full_name":"M. Kaufmann","author_order":1},{"authorUrl":"https://ieeexplore.ieee.org/author/37848075200","id":37848075200,"full_name":"J.S. Moore","author_order":2}]},"access_type":"LOCKED","content_type":"Journals & Magazines","abstract":"ACL2 is a reimplemented extended version of R.S. Boyer and J.S. Moore's (1979; 1988) Nqthm and M. Kaufmann's (1988) Pc-Nqthm, intended for large scale verification projects. The paper deals primarily with how we scaled up Nqthm's logic to an industrial strength\" programming language-namely, a large applicative subset of Common Lisp-while preserving the use of total functions within the logic. This makes it possible to run formal models efficiently while keeping the logic simple. We enumerate many other important features of ACL2 and we briefly summarize two industrial applications: a model of the Motorola CAP digital signal processing chip and the proof of the correctness of the kernel of the floating point division algorithm on the AMD5/sub K/86 microprocessor by Advanced Micro Devices, Inc.","article_number":"588534","pdf_url":"https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=588534","abstract_url":"https://ieeexplore.ieee.org/document/588534/","publication_title":"IEEE Transactions on Software Engineering","publication_number":32,"is_number":12930,"publication_year":1997,"publication_date":"April 1997","start_page":"203","end_page":"213","citing_paper_count":51,"citing_patent_count":3,"index_terms":{"ieee_terms":{"terms":["Logic programming","Logic devices","Digital signal processing chips","Mathematics","Large-scale systems","Functional programming","Kernel","Signal processing algorithms","Microprocessors","Automatic logic units"]}}},{"doi":"10.1109/LICS.2010.55","title":"Theorem Proving for Verification: The Early Days","publisher":"IEEE","isbn":"978-1-4244-7589-6","issn":"1043-6871","partnum":"10PR4114","rank":2,"authors":{"authors":[{"authorUrl":"https://ieeexplore.ieee.org/author/37848075200","id":37848075200,"full_name":"J Strother Moore","author_order":1}]},"access_type":"LOCKED","content_type":"Conferences","abstract":"Summary form only given. Since Turing, computer scientists have understood that the question \"does this program satisfy its specifications?\" could be reduced to the question \"are these formulas theorems?\" But the theorem proving technology of the 50s and 60s was inadequate for the task. In 1971, here in Edinburgh, Boyer and I started building the first general-purpose theorem prover designed for a computational logic. This project continues today, with Matt Kaufmann as a partner; the current version of the theorem prover is ACL2 (A Computational Logic for Applicative Common Lisp). In this talk I'll give a highly personal view of the four decade long \"Boyer-Moore Project,\" including our mechanization of inductive proof, support for recursive definitions, rewriting with previously proved lemmas, integration of decision procedures, efficient representation of logical constants, fast execution, and other proof techniques. Along the way we'll see several interesting side roads: the founding of the Edinburgh school of logic programming, a structureshared text editor that played a role in the creation of Word, and perhaps most surprisingly, the use of our \"Lisp theorem prover\" to formalize and prove theorems about commercial microprocessors and virtual machines via deep embeddings, including parts of processors by AMD, Centaur, IBM, Motorola, Rockwell-Collins, Sun, and others. The entire project helps shed light on the dichotomy between general-purpose theorem pro vers and special-purpose analysis tools.","article_number":"5571718","pdf_url":"https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=5571718","html_url":"https://ieeexplore.ieee.org/document/5571718/","abstract_url":"https://ieeexplore.ieee.org/document/5571718/","publication_title":"2010 25th Annual IEEE Symposium on Logic in Computer Science","conference_location":"Edinburgh","conference_dates":"11-14 July 2010","publication_number":5570020,"is_number":5570867,"publication_year":2010,"publication_date":"11-14 July 2010","start_page":"283","end_page":"283","citing_paper_count":0,"citing_patent_count":0,"index_terms":{"ieee_terms":{"terms":["Logic programming","Roads","Microprocessors","Computers","Sun","Buildings","Educational institutions"]}}}]}